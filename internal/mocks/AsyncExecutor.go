// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	internal "github.com/cloudogu/k8s-dogu-operator/internal"
	mock "github.com/stretchr/testify/mock"

	v1 "github.com/cloudogu/k8s-dogu-operator/api/v1"
)

// AsyncExecutor is an autogenerated mock type for the AsyncExecutor type
type AsyncExecutor struct {
	mock.Mock
}

// AddStep provides a mock function with given fields: step
func (_m *AsyncExecutor) AddStep(step internal.AsyncStep) {
	_m.Called(step)
}

// Execute provides a mock function with given fields: ctx, dogu, currentState
func (_m *AsyncExecutor) Execute(ctx context.Context, dogu *v1.Dogu, currentState string) error {
	ret := _m.Called(ctx, dogu, currentState)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Dogu, string) error); ok {
		r0 = rf(ctx, dogu, currentState)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAsyncExecutor interface {
	mock.TestingT
	Cleanup(func())
}

// NewAsyncExecutor creates a new instance of AsyncExecutor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAsyncExecutor(t mockConstructorTestingTNewAsyncExecutor) *AsyncExecutor {
	mock := &AsyncExecutor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
