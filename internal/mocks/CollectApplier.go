// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	v1 "github.com/cloudogu/k8s-dogu-operator/api/v1"
)

// CollectApplier is an autogenerated mock type for the CollectApplier type
type CollectApplier struct {
	mock.Mock
}

// CollectApply provides a mock function with given fields: ctx, customK8sResources, doguResource
func (_m *CollectApplier) CollectApply(ctx context.Context, customK8sResources map[string]string, doguResource *v1.Dogu) error {
	ret := _m.Called(ctx, customK8sResources, doguResource)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]string, *v1.Dogu) error); ok {
		r0 = rf(ctx, customK8sResources, doguResource)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCollectApplier interface {
	mock.TestingT
	Cleanup(func())
}

// NewCollectApplier creates a new instance of CollectApplier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCollectApplier(t mockConstructorTestingTNewCollectApplier) *CollectApplier {
	mock := &CollectApplier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
