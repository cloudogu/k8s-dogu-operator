// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	client "sigs.k8s.io/controller-runtime/pkg/client"

	mock "github.com/stretchr/testify/mock"
)

// ResourceValidator is an autogenerated mock type for the ResourceValidator type
type ResourceValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: ctx, doguName, obj
func (_m *ResourceValidator) Validate(ctx context.Context, doguName string, obj client.Object) error {
	ret := _m.Called(ctx, doguName, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, client.Object) error); ok {
		r0 = rf(ctx, doguName, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewResourceValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourceValidator creates a new instance of ResourceValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourceValidator(t mockConstructorTestingTNewResourceValidator) *ResourceValidator {
	mock := &ResourceValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
