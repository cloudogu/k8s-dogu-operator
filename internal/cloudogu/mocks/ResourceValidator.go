// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	client "sigs.k8s.io/controller-runtime/pkg/client"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ResourceValidator is an autogenerated mock type for the ResourceValidator type
type ResourceValidator struct {
	mock.Mock
}

type ResourceValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *ResourceValidator) EXPECT() *ResourceValidator_Expecter {
	return &ResourceValidator_Expecter{mock: &_m.Mock}
}

// Validate provides a mock function with given fields: ctx, doguName, obj
func (_m *ResourceValidator) Validate(ctx context.Context, doguName string, obj client.Object) error {
	ret := _m.Called(ctx, doguName, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, client.Object) error); ok {
		r0 = rf(ctx, doguName, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ResourceValidator_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type ResourceValidator_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//  - ctx context.Context
//  - doguName string
//  - obj client.Object
func (_e *ResourceValidator_Expecter) Validate(ctx interface{}, doguName interface{}, obj interface{}) *ResourceValidator_Validate_Call {
	return &ResourceValidator_Validate_Call{Call: _e.mock.On("Validate", ctx, doguName, obj)}
}

func (_c *ResourceValidator_Validate_Call) Run(run func(ctx context.Context, doguName string, obj client.Object)) *ResourceValidator_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(client.Object))
	})
	return _c
}

func (_c *ResourceValidator_Validate_Call) Return(_a0 error) *ResourceValidator_Validate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ResourceValidator_Validate_Call) RunAndReturn(run func(context.Context, string, client.Object) error) *ResourceValidator_Validate_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewResourceValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourceValidator creates a new instance of ResourceValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourceValidator(t mockConstructorTestingTNewResourceValidator) *ResourceValidator {
	mock := &ResourceValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
