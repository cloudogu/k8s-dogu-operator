// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	v1 "github.com/cloudogu/k8s-dogu-operator/api/v1"
	mock "github.com/stretchr/testify/mock"
)

// DoguHealthChecker is an autogenerated mock type for the DoguHealthChecker type
type DoguHealthChecker struct {
	mock.Mock
}

type DoguHealthChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *DoguHealthChecker) EXPECT() *DoguHealthChecker_Expecter {
	return &DoguHealthChecker_Expecter{mock: &_m.Mock}
}

// CheckWithResource provides a mock function with given fields: ctx, doguResource
func (_m *DoguHealthChecker) CheckWithResource(ctx context.Context, doguResource *v1.Dogu) error {
	ret := _m.Called(ctx, doguResource)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Dogu) error); ok {
		r0 = rf(ctx, doguResource)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DoguHealthChecker_CheckWithResource_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckWithResource'
type DoguHealthChecker_CheckWithResource_Call struct {
	*mock.Call
}

// CheckWithResource is a helper method to define mock.On call
//   - ctx context.Context
//   - doguResource *v1.Dogu
func (_e *DoguHealthChecker_Expecter) CheckWithResource(ctx interface{}, doguResource interface{}) *DoguHealthChecker_CheckWithResource_Call {
	return &DoguHealthChecker_CheckWithResource_Call{Call: _e.mock.On("CheckWithResource", ctx, doguResource)}
}

func (_c *DoguHealthChecker_CheckWithResource_Call) Run(run func(ctx context.Context, doguResource *v1.Dogu)) *DoguHealthChecker_CheckWithResource_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1.Dogu))
	})
	return _c
}

func (_c *DoguHealthChecker_CheckWithResource_Call) Return(_a0 error) *DoguHealthChecker_CheckWithResource_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DoguHealthChecker_CheckWithResource_Call) RunAndReturn(run func(context.Context, *v1.Dogu) error) *DoguHealthChecker_CheckWithResource_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewDoguHealthChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewDoguHealthChecker creates a new instance of DoguHealthChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDoguHealthChecker(t mockConstructorTestingTNewDoguHealthChecker) *DoguHealthChecker {
	mock := &DoguHealthChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
