// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// DoguRecursiveHealthChecker is an autogenerated mock type for the DoguRecursiveHealthChecker type
type DoguRecursiveHealthChecker struct {
	mock.Mock
}

type DoguRecursiveHealthChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *DoguRecursiveHealthChecker) EXPECT() *DoguRecursiveHealthChecker_Expecter {
	return &DoguRecursiveHealthChecker_Expecter{mock: &_m.Mock}
}

// CheckDependenciesRecursive provides a mock function with given fields: ctx, fromDogu, currentK8sNamespace
func (_m *DoguRecursiveHealthChecker) CheckDependenciesRecursive(ctx context.Context, fromDogu *core.Dogu, currentK8sNamespace string) error {
	ret := _m.Called(ctx, fromDogu, currentK8sNamespace)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *core.Dogu, string) error); ok {
		r0 = rf(ctx, fromDogu, currentK8sNamespace)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckDependenciesRecursive'
type DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call struct {
	*mock.Call
}

// CheckDependenciesRecursive is a helper method to define mock.On call
//  - ctx context.Context
//  - fromDogu *core.Dogu
//  - currentK8sNamespace string
func (_e *DoguRecursiveHealthChecker_Expecter) CheckDependenciesRecursive(ctx interface{}, fromDogu interface{}, currentK8sNamespace interface{}) *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	return &DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call{Call: _e.mock.On("CheckDependenciesRecursive", ctx, fromDogu, currentK8sNamespace)}
}

func (_c *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) Run(run func(ctx context.Context, fromDogu *core.Dogu, currentK8sNamespace string)) *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*core.Dogu), args[2].(string))
	})
	return _c
}

func (_c *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) Return(_a0 error) *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) RunAndReturn(run func(context.Context, *core.Dogu, string) error) *DoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewDoguRecursiveHealthChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewDoguRecursiveHealthChecker creates a new instance of DoguRecursiveHealthChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDoguRecursiveHealthChecker(t mockConstructorTestingTNewDoguRecursiveHealthChecker) *DoguRecursiveHealthChecker {
	mock := &DoguRecursiveHealthChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
