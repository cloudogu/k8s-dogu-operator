// Code generated by mockery v2.46.2. DO NOT EDIT.

package garbagecollection

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	v2 "github.com/cloudogu/k8s-dogu-operator/v3/api/v2"
)

// mockDoguRestartInterface is an autogenerated mock type for the doguRestartInterface type
type mockDoguRestartInterface struct {
	mock.Mock
}

type mockDoguRestartInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDoguRestartInterface) EXPECT() *mockDoguRestartInterface_Expecter {
	return &mockDoguRestartInterface_Expecter{mock: &_m.Mock}
}

// Delete provides a mock function with given fields: ctx, name, opts
func (_m *mockDoguRestartInterface) Delete(ctx context.Context, name string, opts v1.DeleteOptions) error {
	ret := _m.Called(ctx, name, opts)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, v1.DeleteOptions) error); ok {
		r0 = rf(ctx, name, opts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDoguRestartInterface_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type mockDoguRestartInterface_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - ctx context.Context
//   - name string
//   - opts v1.DeleteOptions
func (_e *mockDoguRestartInterface_Expecter) Delete(ctx interface{}, name interface{}, opts interface{}) *mockDoguRestartInterface_Delete_Call {
	return &mockDoguRestartInterface_Delete_Call{Call: _e.mock.On("Delete", ctx, name, opts)}
}

func (_c *mockDoguRestartInterface_Delete_Call) Run(run func(ctx context.Context, name string, opts v1.DeleteOptions)) *mockDoguRestartInterface_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(v1.DeleteOptions))
	})
	return _c
}

func (_c *mockDoguRestartInterface_Delete_Call) Return(_a0 error) *mockDoguRestartInterface_Delete_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDoguRestartInterface_Delete_Call) RunAndReturn(run func(context.Context, string, v1.DeleteOptions) error) *mockDoguRestartInterface_Delete_Call {
	_c.Call.Return(run)
	return _c
}

// List provides a mock function with given fields: ctx, opts
func (_m *mockDoguRestartInterface) List(ctx context.Context, opts v1.ListOptions) (*v2.DoguRestartList, error) {
	ret := _m.Called(ctx, opts)

	if len(ret) == 0 {
		panic("no return value specified for List")
	}

	var r0 *v2.DoguRestartList
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, v1.ListOptions) (*v2.DoguRestartList, error)); ok {
		return rf(ctx, opts)
	}
	if rf, ok := ret.Get(0).(func(context.Context, v1.ListOptions) *v2.DoguRestartList); ok {
		r0 = rf(ctx, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v2.DoguRestartList)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, v1.ListOptions) error); ok {
		r1 = rf(ctx, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockDoguRestartInterface_List_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'List'
type mockDoguRestartInterface_List_Call struct {
	*mock.Call
}

// List is a helper method to define mock.On call
//   - ctx context.Context
//   - opts v1.ListOptions
func (_e *mockDoguRestartInterface_Expecter) List(ctx interface{}, opts interface{}) *mockDoguRestartInterface_List_Call {
	return &mockDoguRestartInterface_List_Call{Call: _e.mock.On("List", ctx, opts)}
}

func (_c *mockDoguRestartInterface_List_Call) Run(run func(ctx context.Context, opts v1.ListOptions)) *mockDoguRestartInterface_List_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(v1.ListOptions))
	})
	return _c
}

func (_c *mockDoguRestartInterface_List_Call) Return(_a0 *v2.DoguRestartList, _a1 error) *mockDoguRestartInterface_List_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockDoguRestartInterface_List_Call) RunAndReturn(run func(context.Context, v1.ListOptions) (*v2.DoguRestartList, error)) *mockDoguRestartInterface_List_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDoguRestartInterface creates a new instance of mockDoguRestartInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDoguRestartInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDoguRestartInterface {
	mock := &mockDoguRestartInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
