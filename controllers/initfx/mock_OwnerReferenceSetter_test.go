// Code generated by mockery v2.53.5. DO NOT EDIT.

package initfx

import (
	context "context"

	dogu "github.com/cloudogu/ces-commons-lib/dogu"
	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MockOwnerReferenceSetter is an autogenerated mock type for the OwnerReferenceSetter type
type MockOwnerReferenceSetter struct {
	mock.Mock
}

type MockOwnerReferenceSetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOwnerReferenceSetter) EXPECT() *MockOwnerReferenceSetter_Expecter {
	return &MockOwnerReferenceSetter_Expecter{mock: &_m.Mock}
}

// SetOwnerReference provides a mock function with given fields: ctx, dName, owners
func (_m *MockOwnerReferenceSetter) SetOwnerReference(ctx context.Context, dName dogu.SimpleName, owners []v1.OwnerReference) error {
	ret := _m.Called(ctx, dName, owners)

	if len(ret) == 0 {
		panic("no return value specified for SetOwnerReference")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleName, []v1.OwnerReference) error); ok {
		r0 = rf(ctx, dName, owners)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOwnerReferenceSetter_SetOwnerReference_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetOwnerReference'
type MockOwnerReferenceSetter_SetOwnerReference_Call struct {
	*mock.Call
}

// SetOwnerReference is a helper method to define mock.On call
//   - ctx context.Context
//   - dName dogu.SimpleName
//   - owners []v1.OwnerReference
func (_e *MockOwnerReferenceSetter_Expecter) SetOwnerReference(ctx interface{}, dName interface{}, owners interface{}) *MockOwnerReferenceSetter_SetOwnerReference_Call {
	return &MockOwnerReferenceSetter_SetOwnerReference_Call{Call: _e.mock.On("SetOwnerReference", ctx, dName, owners)}
}

func (_c *MockOwnerReferenceSetter_SetOwnerReference_Call) Run(run func(ctx context.Context, dName dogu.SimpleName, owners []v1.OwnerReference)) *MockOwnerReferenceSetter_SetOwnerReference_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(dogu.SimpleName), args[2].([]v1.OwnerReference))
	})
	return _c
}

func (_c *MockOwnerReferenceSetter_SetOwnerReference_Call) Return(_a0 error) *MockOwnerReferenceSetter_SetOwnerReference_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOwnerReferenceSetter_SetOwnerReference_Call) RunAndReturn(run func(context.Context, dogu.SimpleName, []v1.OwnerReference) error) *MockOwnerReferenceSetter_SetOwnerReference_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOwnerReferenceSetter creates a new instance of MockOwnerReferenceSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOwnerReferenceSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOwnerReferenceSetter {
	mock := &MockOwnerReferenceSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
