// Code generated by mockery v2.53.5. DO NOT EDIT.

package initfx

import (
	mock "github.com/stretchr/testify/mock"
	fx "go.uber.org/fx"
)

// mockFxLifecycle is an autogenerated mock type for the fxLifecycle type
type mockFxLifecycle struct {
	mock.Mock
}

type mockFxLifecycle_Expecter struct {
	mock *mock.Mock
}

func (_m *mockFxLifecycle) EXPECT() *mockFxLifecycle_Expecter {
	return &mockFxLifecycle_Expecter{mock: &_m.Mock}
}

// Append provides a mock function with given fields: _a0
func (_m *mockFxLifecycle) Append(_a0 fx.Hook) {
	_m.Called(_a0)
}

// mockFxLifecycle_Append_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Append'
type mockFxLifecycle_Append_Call struct {
	*mock.Call
}

// Append is a helper method to define mock.On call
//   - _a0 fx.Hook
func (_e *mockFxLifecycle_Expecter) Append(_a0 interface{}) *mockFxLifecycle_Append_Call {
	return &mockFxLifecycle_Append_Call{Call: _e.mock.On("Append", _a0)}
}

func (_c *mockFxLifecycle_Append_Call) Run(run func(_a0 fx.Hook)) *mockFxLifecycle_Append_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(fx.Hook))
	})
	return _c
}

func (_c *mockFxLifecycle_Append_Call) Return() *mockFxLifecycle_Append_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockFxLifecycle_Append_Call) RunAndReturn(run func(fx.Hook)) *mockFxLifecycle_Append_Call {
	_c.Run(run)
	return _c
}

// newMockFxLifecycle creates a new instance of mockFxLifecycle. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockFxLifecycle(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockFxLifecycle {
	mock := &mockFxLifecycle{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
