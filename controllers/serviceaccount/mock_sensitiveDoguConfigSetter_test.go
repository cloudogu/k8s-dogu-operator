// Code generated by mockery v2.46.2. DO NOT EDIT.

package serviceaccount

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockSensitiveDoguConfigSetter is an autogenerated mock type for the sensitiveDoguConfigSetter type
type mockSensitiveDoguConfigSetter struct {
	mock.Mock
}

type mockSensitiveDoguConfigSetter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockSensitiveDoguConfigSetter) EXPECT() *mockSensitiveDoguConfigSetter_Expecter {
	return &mockSensitiveDoguConfigSetter_Expecter{mock: &_m.Mock}
}

// Set provides a mock function with given fields: ctx, key, value
func (_m *mockSensitiveDoguConfigSetter) Set(ctx context.Context, key string, value string) error {
	ret := _m.Called(ctx, key, value)

	if len(ret) == 0 {
		panic("no return value specified for Set")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, key, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockSensitiveDoguConfigSetter_Set_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Set'
type mockSensitiveDoguConfigSetter_Set_Call struct {
	*mock.Call
}

// Set is a helper method to define mock.On call
//   - ctx context.Context
//   - key string
//   - value string
func (_e *mockSensitiveDoguConfigSetter_Expecter) Set(ctx interface{}, key interface{}, value interface{}) *mockSensitiveDoguConfigSetter_Set_Call {
	return &mockSensitiveDoguConfigSetter_Set_Call{Call: _e.mock.On("Set", ctx, key, value)}
}

func (_c *mockSensitiveDoguConfigSetter_Set_Call) Run(run func(ctx context.Context, key string, value string)) *mockSensitiveDoguConfigSetter_Set_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *mockSensitiveDoguConfigSetter_Set_Call) Return(_a0 error) *mockSensitiveDoguConfigSetter_Set_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockSensitiveDoguConfigSetter_Set_Call) RunAndReturn(run func(context.Context, string, string) error) *mockSensitiveDoguConfigSetter_Set_Call {
	_c.Call.Return(run)
	return _c
}

// newMockSensitiveDoguConfigSetter creates a new instance of mockSensitiveDoguConfigSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockSensitiveDoguConfigSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockSensitiveDoguConfigSetter {
	mock := &mockSensitiveDoguConfigSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
