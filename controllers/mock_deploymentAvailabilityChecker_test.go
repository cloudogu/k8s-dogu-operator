// Code generated by mockery v2.53.5. DO NOT EDIT.

package controllers

import (
	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/apps/v1"
)

// mockDeploymentAvailabilityChecker is an autogenerated mock type for the deploymentAvailabilityChecker type
type mockDeploymentAvailabilityChecker struct {
	mock.Mock
}

type mockDeploymentAvailabilityChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDeploymentAvailabilityChecker) EXPECT() *mockDeploymentAvailabilityChecker_Expecter {
	return &mockDeploymentAvailabilityChecker_Expecter{mock: &_m.Mock}
}

// IsAvailable provides a mock function with given fields: deployment
func (_m *mockDeploymentAvailabilityChecker) IsAvailable(deployment *v1.Deployment) bool {
	ret := _m.Called(deployment)

	if len(ret) == 0 {
		panic("no return value specified for IsAvailable")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(*v1.Deployment) bool); ok {
		r0 = rf(deployment)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// mockDeploymentAvailabilityChecker_IsAvailable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsAvailable'
type mockDeploymentAvailabilityChecker_IsAvailable_Call struct {
	*mock.Call
}

// IsAvailable is a helper method to define mock.On call
//   - deployment *v1.Deployment
func (_e *mockDeploymentAvailabilityChecker_Expecter) IsAvailable(deployment interface{}) *mockDeploymentAvailabilityChecker_IsAvailable_Call {
	return &mockDeploymentAvailabilityChecker_IsAvailable_Call{Call: _e.mock.On("IsAvailable", deployment)}
}

func (_c *mockDeploymentAvailabilityChecker_IsAvailable_Call) Run(run func(deployment *v1.Deployment)) *mockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*v1.Deployment))
	})
	return _c
}

func (_c *mockDeploymentAvailabilityChecker_IsAvailable_Call) Return(_a0 bool) *mockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDeploymentAvailabilityChecker_IsAvailable_Call) RunAndReturn(run func(*v1.Deployment) bool) *mockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDeploymentAvailabilityChecker creates a new instance of mockDeploymentAvailabilityChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDeploymentAvailabilityChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDeploymentAvailabilityChecker {
	mock := &mockDeploymentAvailabilityChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
