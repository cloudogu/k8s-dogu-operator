// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	core "github.com/cloudogu/cesapp-lib/core"
	exec "github.com/cloudogu/k8s-dogu-operator/controllers/exec"
	mock "github.com/stretchr/testify/mock"

	v1 "github.com/cloudogu/k8s-dogu-operator/api/v1"
)

// ExecPodFactory is an autogenerated mock type for the ExecPodFactory type
type ExecPodFactory struct {
	mock.Mock
}

// NewExecPod provides a mock function with given fields: execPodFactoryMode, doguResource, dogu
func (_m *ExecPodFactory) NewExecPod(execPodFactoryMode exec.PodVolumeMode, doguResource *v1.Dogu, dogu *core.Dogu) (exec.ExecPod, error) {
	ret := _m.Called(execPodFactoryMode, doguResource, dogu)

	var r0 exec.ExecPod
	if rf, ok := ret.Get(0).(func(exec.PodVolumeMode, *v1.Dogu, *core.Dogu) exec.ExecPod); ok {
		r0 = rf(execPodFactoryMode, doguResource, dogu)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(exec.ExecPod)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(exec.PodVolumeMode, *v1.Dogu, *core.Dogu) error); ok {
		r1 = rf(execPodFactoryMode, doguResource, dogu)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExecPodFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewExecPodFactory creates a new instance of ExecPodFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExecPodFactory(t mockConstructorTestingTNewExecPodFactory) *ExecPodFactory {
	mock := &ExecPodFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
