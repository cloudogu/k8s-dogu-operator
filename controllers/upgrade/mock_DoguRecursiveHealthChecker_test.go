// Code generated by mockery v2.46.2. DO NOT EDIT.

package upgrade

import (
	context "context"

	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// MockDoguRecursiveHealthChecker is an autogenerated mock type for the DoguRecursiveHealthChecker type
type MockDoguRecursiveHealthChecker struct {
	mock.Mock
}

type MockDoguRecursiveHealthChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDoguRecursiveHealthChecker) EXPECT() *MockDoguRecursiveHealthChecker_Expecter {
	return &MockDoguRecursiveHealthChecker_Expecter{mock: &_m.Mock}
}

// CheckDependenciesRecursive provides a mock function with given fields: ctx, fromDogu, namespace
func (_m *MockDoguRecursiveHealthChecker) CheckDependenciesRecursive(ctx context.Context, fromDogu *core.Dogu, namespace string) error {
	ret := _m.Called(ctx, fromDogu, namespace)

	if len(ret) == 0 {
		panic("no return value specified for CheckDependenciesRecursive")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *core.Dogu, string) error); ok {
		r0 = rf(ctx, fromDogu, namespace)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckDependenciesRecursive'
type MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call struct {
	*mock.Call
}

// CheckDependenciesRecursive is a helper method to define mock.On call
//   - ctx context.Context
//   - fromDogu *core.Dogu
//   - namespace string
func (_e *MockDoguRecursiveHealthChecker_Expecter) CheckDependenciesRecursive(ctx interface{}, fromDogu interface{}, namespace interface{}) *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	return &MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call{Call: _e.mock.On("CheckDependenciesRecursive", ctx, fromDogu, namespace)}
}

func (_c *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) Run(run func(ctx context.Context, fromDogu *core.Dogu, namespace string)) *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*core.Dogu), args[2].(string))
	})
	return _c
}

func (_c *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) Return(_a0 error) *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call) RunAndReturn(run func(context.Context, *core.Dogu, string) error) *MockDoguRecursiveHealthChecker_CheckDependenciesRecursive_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDoguRecursiveHealthChecker creates a new instance of MockDoguRecursiveHealthChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDoguRecursiveHealthChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDoguRecursiveHealthChecker {
	mock := &MockDoguRecursiveHealthChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
