// Code generated by mockery v2.53.5. DO NOT EDIT.

package install

import (
	context "context"

	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/api/apps/v1"

	v2 "github.com/cloudogu/k8s-dogu-lib/v2/api/v2"
)

// mockDoguHealthStatusUpdater is an autogenerated mock type for the doguHealthStatusUpdater type
type mockDoguHealthStatusUpdater struct {
	mock.Mock
}

type mockDoguHealthStatusUpdater_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDoguHealthStatusUpdater) EXPECT() *mockDoguHealthStatusUpdater_Expecter {
	return &mockDoguHealthStatusUpdater_Expecter{mock: &_m.Mock}
}

// DeleteDoguOutOfHealthConfigMap provides a mock function with given fields: ctx, dogu
func (_m *mockDoguHealthStatusUpdater) DeleteDoguOutOfHealthConfigMap(ctx context.Context, dogu *v2.Dogu) error {
	ret := _m.Called(ctx, dogu)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDoguOutOfHealthConfigMap")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v2.Dogu) error); ok {
		r0 = rf(ctx, dogu)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteDoguOutOfHealthConfigMap'
type mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call struct {
	*mock.Call
}

// DeleteDoguOutOfHealthConfigMap is a helper method to define mock.On call
//   - ctx context.Context
//   - dogu *v2.Dogu
func (_e *mockDoguHealthStatusUpdater_Expecter) DeleteDoguOutOfHealthConfigMap(ctx interface{}, dogu interface{}) *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call {
	return &mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call{Call: _e.mock.On("DeleteDoguOutOfHealthConfigMap", ctx, dogu)}
}

func (_c *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call) Run(run func(ctx context.Context, dogu *v2.Dogu)) *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v2.Dogu))
	})
	return _c
}

func (_c *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call) Return(_a0 error) *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call) RunAndReturn(run func(context.Context, *v2.Dogu) error) *mockDoguHealthStatusUpdater_DeleteDoguOutOfHealthConfigMap_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateHealthConfigMap provides a mock function with given fields: ctx, deployment, doguJson
func (_m *mockDoguHealthStatusUpdater) UpdateHealthConfigMap(ctx context.Context, deployment *v1.Deployment, doguJson *core.Dogu) error {
	ret := _m.Called(ctx, deployment, doguJson)

	if len(ret) == 0 {
		panic("no return value specified for UpdateHealthConfigMap")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Deployment, *core.Dogu) error); ok {
		r0 = rf(ctx, deployment, doguJson)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateHealthConfigMap'
type mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call struct {
	*mock.Call
}

// UpdateHealthConfigMap is a helper method to define mock.On call
//   - ctx context.Context
//   - deployment *v1.Deployment
//   - doguJson *core.Dogu
func (_e *mockDoguHealthStatusUpdater_Expecter) UpdateHealthConfigMap(ctx interface{}, deployment interface{}, doguJson interface{}) *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call {
	return &mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call{Call: _e.mock.On("UpdateHealthConfigMap", ctx, deployment, doguJson)}
}

func (_c *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call) Run(run func(ctx context.Context, deployment *v1.Deployment, doguJson *core.Dogu)) *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1.Deployment), args[2].(*core.Dogu))
	})
	return _c
}

func (_c *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call) Return(_a0 error) *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call) RunAndReturn(run func(context.Context, *v1.Deployment, *core.Dogu) error) *mockDoguHealthStatusUpdater_UpdateHealthConfigMap_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDoguHealthStatusUpdater creates a new instance of mockDoguHealthStatusUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDoguHealthStatusUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDoguHealthStatusUpdater {
	mock := &mockDoguHealthStatusUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
