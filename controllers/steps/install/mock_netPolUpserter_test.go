// Code generated by mockery v2.53.5. DO NOT EDIT.

package install

import (
	context "context"

	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/api/core/v1"

	v2 "github.com/cloudogu/k8s-dogu-lib/v2/api/v2"
)

// mockNetPolUpserter is an autogenerated mock type for the netPolUpserter type
type mockNetPolUpserter struct {
	mock.Mock
}

type mockNetPolUpserter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockNetPolUpserter) EXPECT() *mockNetPolUpserter_Expecter {
	return &mockNetPolUpserter_Expecter{mock: &_m.Mock}
}

// UpsertDoguNetworkPolicies provides a mock function with given fields: ctx, doguResource, dogu, doguService
func (_m *mockNetPolUpserter) UpsertDoguNetworkPolicies(ctx context.Context, doguResource *v2.Dogu, dogu *core.Dogu, doguService *v1.Service) error {
	ret := _m.Called(ctx, doguResource, dogu, doguService)

	if len(ret) == 0 {
		panic("no return value specified for UpsertDoguNetworkPolicies")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v2.Dogu, *core.Dogu, *v1.Service) error); ok {
		r0 = rf(ctx, doguResource, dogu, doguService)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockNetPolUpserter_UpsertDoguNetworkPolicies_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpsertDoguNetworkPolicies'
type mockNetPolUpserter_UpsertDoguNetworkPolicies_Call struct {
	*mock.Call
}

// UpsertDoguNetworkPolicies is a helper method to define mock.On call
//   - ctx context.Context
//   - doguResource *v2.Dogu
//   - dogu *core.Dogu
//   - doguService *v1.Service
func (_e *mockNetPolUpserter_Expecter) UpsertDoguNetworkPolicies(ctx interface{}, doguResource interface{}, dogu interface{}, doguService interface{}) *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call {
	return &mockNetPolUpserter_UpsertDoguNetworkPolicies_Call{Call: _e.mock.On("UpsertDoguNetworkPolicies", ctx, doguResource, dogu, doguService)}
}

func (_c *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call) Run(run func(ctx context.Context, doguResource *v2.Dogu, dogu *core.Dogu, doguService *v1.Service)) *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v2.Dogu), args[2].(*core.Dogu), args[3].(*v1.Service))
	})
	return _c
}

func (_c *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call) Return(_a0 error) *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call) RunAndReturn(run func(context.Context, *v2.Dogu, *core.Dogu, *v1.Service) error) *mockNetPolUpserter_UpsertDoguNetworkPolicies_Call {
	_c.Call.Return(run)
	return _c
}

// newMockNetPolUpserter creates a new instance of mockNetPolUpserter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockNetPolUpserter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockNetPolUpserter {
	mock := &mockNetPolUpserter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
