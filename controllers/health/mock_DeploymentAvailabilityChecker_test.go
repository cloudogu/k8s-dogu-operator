// Code generated by mockery v2.20.0. DO NOT EDIT.

package health

import (
	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/apps/v1"
)

// MockDeploymentAvailabilityChecker is an autogenerated mock type for the DeploymentAvailabilityChecker type
type MockDeploymentAvailabilityChecker struct {
	mock.Mock
}

type MockDeploymentAvailabilityChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDeploymentAvailabilityChecker) EXPECT() *MockDeploymentAvailabilityChecker_Expecter {
	return &MockDeploymentAvailabilityChecker_Expecter{mock: &_m.Mock}
}

// IsAvailable provides a mock function with given fields: deployment
func (_m *MockDeploymentAvailabilityChecker) IsAvailable(deployment *v1.Deployment) bool {
	ret := _m.Called(deployment)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*v1.Deployment) bool); ok {
		r0 = rf(deployment)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockDeploymentAvailabilityChecker_IsAvailable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsAvailable'
type MockDeploymentAvailabilityChecker_IsAvailable_Call struct {
	*mock.Call
}

// IsAvailable is a helper method to define mock.On call
//   - deployment *v1.Deployment
func (_e *MockDeploymentAvailabilityChecker_Expecter) IsAvailable(deployment interface{}) *MockDeploymentAvailabilityChecker_IsAvailable_Call {
	return &MockDeploymentAvailabilityChecker_IsAvailable_Call{Call: _e.mock.On("IsAvailable", deployment)}
}

func (_c *MockDeploymentAvailabilityChecker_IsAvailable_Call) Run(run func(deployment *v1.Deployment)) *MockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*v1.Deployment))
	})
	return _c
}

func (_c *MockDeploymentAvailabilityChecker_IsAvailable_Call) Return(_a0 bool) *MockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDeploymentAvailabilityChecker_IsAvailable_Call) RunAndReturn(run func(*v1.Deployment) bool) *MockDeploymentAvailabilityChecker_IsAvailable_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDeploymentAvailabilityChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDeploymentAvailabilityChecker creates a new instance of MockDeploymentAvailabilityChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDeploymentAvailabilityChecker(t mockConstructorTestingTNewMockDeploymentAvailabilityChecker) *MockDeploymentAvailabilityChecker {
	mock := &MockDeploymentAvailabilityChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
