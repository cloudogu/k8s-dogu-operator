// Code generated by mockery v2.53.3. DO NOT EDIT.

package resource

import (
	context "context"

	config "github.com/cloudogu/k8s-registry-lib/config"

	dogu "github.com/cloudogu/ces-commons-lib/dogu"

	mock "github.com/stretchr/testify/mock"
)

// mockDoguConfigGetter is an autogenerated mock type for the doguConfigGetter type
type mockDoguConfigGetter struct {
	mock.Mock
}

type mockDoguConfigGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDoguConfigGetter) EXPECT() *mockDoguConfigGetter_Expecter {
	return &mockDoguConfigGetter_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: ctx, name
func (_m *mockDoguConfigGetter) Get(ctx context.Context, name dogu.SimpleName) (config.DoguConfig, error) {
	ret := _m.Called(ctx, name)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 config.DoguConfig
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleName) (config.DoguConfig, error)); ok {
		return rf(ctx, name)
	}
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleName) config.DoguConfig); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(config.DoguConfig)
	}

	if rf, ok := ret.Get(1).(func(context.Context, dogu.SimpleName) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockDoguConfigGetter_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type mockDoguConfigGetter_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
//   - name dogu.SimpleName
func (_e *mockDoguConfigGetter_Expecter) Get(ctx interface{}, name interface{}) *mockDoguConfigGetter_Get_Call {
	return &mockDoguConfigGetter_Get_Call{Call: _e.mock.On("Get", ctx, name)}
}

func (_c *mockDoguConfigGetter_Get_Call) Run(run func(ctx context.Context, name dogu.SimpleName)) *mockDoguConfigGetter_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(dogu.SimpleName))
	})
	return _c
}

func (_c *mockDoguConfigGetter_Get_Call) Return(_a0 config.DoguConfig, _a1 error) *mockDoguConfigGetter_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockDoguConfigGetter_Get_Call) RunAndReturn(run func(context.Context, dogu.SimpleName) (config.DoguConfig, error)) *mockDoguConfigGetter_Get_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDoguConfigGetter creates a new instance of mockDoguConfigGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDoguConfigGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDoguConfigGetter {
	mock := &mockDoguConfigGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
