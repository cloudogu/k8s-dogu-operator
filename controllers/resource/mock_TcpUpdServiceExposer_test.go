// Code generated by mockery v2.46.2. DO NOT EDIT.

package resource

import (
	context "context"

	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// MockTcpUpdServiceExposer is an autogenerated mock type for the TcpUpdServiceExposer type
type MockTcpUpdServiceExposer struct {
	mock.Mock
}

type MockTcpUpdServiceExposer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTcpUpdServiceExposer) EXPECT() *MockTcpUpdServiceExposer_Expecter {
	return &MockTcpUpdServiceExposer_Expecter{mock: &_m.Mock}
}

// DeleteDoguServices provides a mock function with given fields: ctx, namespace, dogu
func (_m *MockTcpUpdServiceExposer) DeleteDoguServices(ctx context.Context, namespace string, dogu *core.Dogu) error {
	ret := _m.Called(ctx, namespace, dogu)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDoguServices")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *core.Dogu) error); ok {
		r0 = rf(ctx, namespace, dogu)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockTcpUpdServiceExposer_DeleteDoguServices_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteDoguServices'
type MockTcpUpdServiceExposer_DeleteDoguServices_Call struct {
	*mock.Call
}

// DeleteDoguServices is a helper method to define mock.On call
//   - ctx context.Context
//   - namespace string
//   - dogu *core.Dogu
func (_e *MockTcpUpdServiceExposer_Expecter) DeleteDoguServices(ctx interface{}, namespace interface{}, dogu interface{}) *MockTcpUpdServiceExposer_DeleteDoguServices_Call {
	return &MockTcpUpdServiceExposer_DeleteDoguServices_Call{Call: _e.mock.On("DeleteDoguServices", ctx, namespace, dogu)}
}

func (_c *MockTcpUpdServiceExposer_DeleteDoguServices_Call) Run(run func(ctx context.Context, namespace string, dogu *core.Dogu)) *MockTcpUpdServiceExposer_DeleteDoguServices_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*core.Dogu))
	})
	return _c
}

func (_c *MockTcpUpdServiceExposer_DeleteDoguServices_Call) Return(_a0 error) *MockTcpUpdServiceExposer_DeleteDoguServices_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTcpUpdServiceExposer_DeleteDoguServices_Call) RunAndReturn(run func(context.Context, string, *core.Dogu) error) *MockTcpUpdServiceExposer_DeleteDoguServices_Call {
	_c.Call.Return(run)
	return _c
}

// ExposeOrUpdateDoguServices provides a mock function with given fields: ctx, namespace, dogu
func (_m *MockTcpUpdServiceExposer) ExposeOrUpdateDoguServices(ctx context.Context, namespace string, dogu *core.Dogu) error {
	ret := _m.Called(ctx, namespace, dogu)

	if len(ret) == 0 {
		panic("no return value specified for ExposeOrUpdateDoguServices")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *core.Dogu) error); ok {
		r0 = rf(ctx, namespace, dogu)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExposeOrUpdateDoguServices'
type MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call struct {
	*mock.Call
}

// ExposeOrUpdateDoguServices is a helper method to define mock.On call
//   - ctx context.Context
//   - namespace string
//   - dogu *core.Dogu
func (_e *MockTcpUpdServiceExposer_Expecter) ExposeOrUpdateDoguServices(ctx interface{}, namespace interface{}, dogu interface{}) *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call {
	return &MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call{Call: _e.mock.On("ExposeOrUpdateDoguServices", ctx, namespace, dogu)}
}

func (_c *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call) Run(run func(ctx context.Context, namespace string, dogu *core.Dogu)) *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*core.Dogu))
	})
	return _c
}

func (_c *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call) Return(_a0 error) *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call) RunAndReturn(run func(context.Context, string, *core.Dogu) error) *MockTcpUpdServiceExposer_ExposeOrUpdateDoguServices_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTcpUpdServiceExposer creates a new instance of MockTcpUpdServiceExposer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTcpUpdServiceExposer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTcpUpdServiceExposer {
	mock := &MockTcpUpdServiceExposer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
