// Code generated by mockery v2.42.1. DO NOT EDIT.

package resource

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDoguConfigProvider is an autogenerated mock type for the DoguConfigProvider type
type MockDoguConfigProvider struct {
	mock.Mock
}

type MockDoguConfigProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDoguConfigProvider) EXPECT() *MockDoguConfigProvider_Expecter {
	return &MockDoguConfigProvider_Expecter{mock: &_m.Mock}
}

// GetDoguConfig provides a mock function with given fields: ctx, doguName
func (_m *MockDoguConfigProvider) GetDoguConfig(ctx context.Context, doguName string) (DoguConfigRegistry, error) {
	ret := _m.Called(ctx, doguName)

	if len(ret) == 0 {
		panic("no return value specified for GetDoguConfig")
	}

	var r0 DoguConfigRegistry
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (DoguConfigRegistry, error)); ok {
		return rf(ctx, doguName)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) DoguConfigRegistry); ok {
		r0 = rf(ctx, doguName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DoguConfigRegistry)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, doguName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDoguConfigProvider_GetDoguConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDoguConfig'
type MockDoguConfigProvider_GetDoguConfig_Call struct {
	*mock.Call
}

// GetDoguConfig is a helper method to define mock.On call
//   - ctx context.Context
//   - doguName string
func (_e *MockDoguConfigProvider_Expecter) GetDoguConfig(ctx interface{}, doguName interface{}) *MockDoguConfigProvider_GetDoguConfig_Call {
	return &MockDoguConfigProvider_GetDoguConfig_Call{Call: _e.mock.On("GetDoguConfig", ctx, doguName)}
}

func (_c *MockDoguConfigProvider_GetDoguConfig_Call) Run(run func(ctx context.Context, doguName string)) *MockDoguConfigProvider_GetDoguConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockDoguConfigProvider_GetDoguConfig_Call) Return(_a0 DoguConfigRegistry, _a1 error) *MockDoguConfigProvider_GetDoguConfig_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDoguConfigProvider_GetDoguConfig_Call) RunAndReturn(run func(context.Context, string) (DoguConfigRegistry, error)) *MockDoguConfigProvider_GetDoguConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDoguConfigProvider creates a new instance of MockDoguConfigProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDoguConfigProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDoguConfigProvider {
	mock := &MockDoguConfigProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
