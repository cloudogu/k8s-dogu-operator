// Code generated by mockery v2.53.3. DO NOT EDIT.

package controllers

import (
	context "context"

	v2 "github.com/cloudogu/k8s-dogu-lib/v2/api/v2"
	mock "github.com/stretchr/testify/mock"
)

// mockDataSeedManager is an autogenerated mock type for the dataSeedManager type
type mockDataSeedManager struct {
	mock.Mock
}

type mockDataSeedManager_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDataSeedManager) EXPECT() *mockDataSeedManager_Expecter {
	return &mockDataSeedManager_Expecter{mock: &_m.Mock}
}

// DataMountsChanged provides a mock function with given fields: ctx, doguResource
func (_m *mockDataSeedManager) DataMountsChanged(ctx context.Context, doguResource *v2.Dogu) (bool, error) {
	ret := _m.Called(ctx, doguResource)

	if len(ret) == 0 {
		panic("no return value specified for DataMountsChanged")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v2.Dogu) (bool, error)); ok {
		return rf(ctx, doguResource)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v2.Dogu) bool); ok {
		r0 = rf(ctx, doguResource)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v2.Dogu) error); ok {
		r1 = rf(ctx, doguResource)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockDataSeedManager_DataMountsChanged_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DataMountsChanged'
type mockDataSeedManager_DataMountsChanged_Call struct {
	*mock.Call
}

// DataMountsChanged is a helper method to define mock.On call
//   - ctx context.Context
//   - doguResource *v2.Dogu
func (_e *mockDataSeedManager_Expecter) DataMountsChanged(ctx interface{}, doguResource interface{}) *mockDataSeedManager_DataMountsChanged_Call {
	return &mockDataSeedManager_DataMountsChanged_Call{Call: _e.mock.On("DataMountsChanged", ctx, doguResource)}
}

func (_c *mockDataSeedManager_DataMountsChanged_Call) Run(run func(ctx context.Context, doguResource *v2.Dogu)) *mockDataSeedManager_DataMountsChanged_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v2.Dogu))
	})
	return _c
}

func (_c *mockDataSeedManager_DataMountsChanged_Call) Return(_a0 bool, _a1 error) *mockDataSeedManager_DataMountsChanged_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockDataSeedManager_DataMountsChanged_Call) RunAndReturn(run func(context.Context, *v2.Dogu) (bool, error)) *mockDataSeedManager_DataMountsChanged_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateDataMounts provides a mock function with given fields: ctx, doguResource
func (_m *mockDataSeedManager) UpdateDataMounts(ctx context.Context, doguResource *v2.Dogu) error {
	ret := _m.Called(ctx, doguResource)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDataMounts")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v2.Dogu) error); ok {
		r0 = rf(ctx, doguResource)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDataSeedManager_UpdateDataMounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateDataMounts'
type mockDataSeedManager_UpdateDataMounts_Call struct {
	*mock.Call
}

// UpdateDataMounts is a helper method to define mock.On call
//   - ctx context.Context
//   - doguResource *v2.Dogu
func (_e *mockDataSeedManager_Expecter) UpdateDataMounts(ctx interface{}, doguResource interface{}) *mockDataSeedManager_UpdateDataMounts_Call {
	return &mockDataSeedManager_UpdateDataMounts_Call{Call: _e.mock.On("UpdateDataMounts", ctx, doguResource)}
}

func (_c *mockDataSeedManager_UpdateDataMounts_Call) Run(run func(ctx context.Context, doguResource *v2.Dogu)) *mockDataSeedManager_UpdateDataMounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v2.Dogu))
	})
	return _c
}

func (_c *mockDataSeedManager_UpdateDataMounts_Call) Return(_a0 error) *mockDataSeedManager_UpdateDataMounts_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDataSeedManager_UpdateDataMounts_Call) RunAndReturn(run func(context.Context, *v2.Dogu) error) *mockDataSeedManager_UpdateDataMounts_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDataSeedManager creates a new instance of mockDataSeedManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDataSeedManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDataSeedManager {
	mock := &mockDataSeedManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
